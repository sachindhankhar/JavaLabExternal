/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.40
 * Generated at: 2019-05-26 09:52:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>T-shirt</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=\"yellow\"><br><br><br>\r\n");
      out.write("\t<div align=\"center\">\r\n");
      out.write("\t\r\n");
      out.write("\t<form action=\"Tshirts\" method=\"post\">\r\n");
      out.write("\t\r\n");
      out.write("\t\tT-Shirt Accessories:Belt:<input type=\"checkbox\" name=\"acc\" value=\"belt\">\r\n");
      out.write("\t\tCap:<input type=\"checkbox\" name=\"acc\" value=\"cap\">\r\n");
      out.write("\t\tHairBand:<input type=\"checkbox\" name=\"acc\" value=\"HairBand\">\r\n");
      out.write("\t\t<br><br>\r\n");
      out.write("\t\tT-Shirt Tag line:<input type=\"text\" name=\"tagline\"><br><br>\r\n");
      out.write("\t\tChest Pocket:Yes<input type=\"radio\" name=\"pocket\" value=\"yes\">\r\n");
      out.write("\t\t\t\t\t No<input type=\"radio\" name=\"pocket\" value=\"no\">\r\n");
      out.write("\t\tT-Shirt Color:<select name=\"color\">\r\n");
      out.write("\t\t<option value=\"red\">Red</option>\r\n");
      out.write("\t\t<option value=\"green\">Green</option>\r\n");
      out.write("\t\t<option value=\"blue\">Blue</option>\r\n");
      out.write("\t\t</select>\r\n");
      out.write("\t\t<input type=\"submit\" value=\"Click Me\">\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<br><br>\r\n");
      out.write("\t<table border=\"1\">\r\n");
      out.write("\t<tr><th>OrderNo.</th><th>Accessories</th><th>TagLine</th>\r\n");
      out.write("\t<th>ChestPocket</th><th>Color</th></tr>\r\n");
      out.write("\t<tr><td>");
      out.print( String.valueOf(session.getAttribute("orderno")));
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print( String.valueOf(session.getAttribute("acc")) );
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print( String.valueOf(session.getAttribute("tagline")) );
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print( String.valueOf(session.getAttribute("pocket")) );
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print( String.valueOf(session.getAttribute("color")) );
      out.write("</td>\r\n");
      out.write("\t</tr></table>");
 session.invalidate(); 
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
